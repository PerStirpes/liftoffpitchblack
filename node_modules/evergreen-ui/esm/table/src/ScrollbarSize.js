import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";

/* eslint-disable react/no-unused-state */
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';

var ScrollbarSize =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(ScrollbarSize, _PureComponent);

  function ScrollbarSize() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ScrollbarSize);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ScrollbarSize)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      innerWidth: null,
      outerWidth: null
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleOuterRef", function (ref) {
      _this.outerRef = ref;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleInnerRef", function (ref) {
      _this.innerRef = ref;
    });

    return _this;
  }

  _createClass(ScrollbarSize, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var innerWidth = this.innerRef.getBoundingClientRect().width;
      var outerWidth = this.outerRef.getBoundingClientRect().width;
      this.setState({
        innerWidth: innerWidth,
        outerWidth: outerWidth
      });
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate(nextProps, nextState) {
      if (nextState.innerWidth && nextState.outerWidth) {
        this.props.handleScrollbarSize(nextState.outerWidth - nextState.innerWidth);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement("div", {
        ref: this.handleOuterRef,
        "aria-hidden": true,
        style: {
          position: 'fixed',
          top: -500,
          left: -500,
          width: 100,
          overflowY: 'scroll'
        }
      }, React.createElement("div", {
        ref: this.handleInnerRef
      }));
    }
  }]);

  return ScrollbarSize;
}(PureComponent);

ScrollbarSize.displayName = "ScrollbarSize";

_defineProperty(ScrollbarSize, "propTypes", {
  /**
   * Returns the size of the scrollbar by creating a hidden fixed div.
   */
  handleScrollbarSize: PropTypes.func
});

_defineProperty(ScrollbarSize, "defaultProps", {
  handleScrollbarSize: function handleScrollbarSize() {}
});

export { ScrollbarSize as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvU2Nyb2xsYmFyU2l6ZS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJTY3JvbGxiYXJTaXplIiwiaW5uZXJXaWR0aCIsIm91dGVyV2lkdGgiLCJyZWYiLCJvdXRlclJlZiIsImlubmVyUmVmIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJzZXRTdGF0ZSIsIm5leHRQcm9wcyIsIm5leHRTdGF0ZSIsInByb3BzIiwiaGFuZGxlU2Nyb2xsYmFyU2l6ZSIsImhhbmRsZU91dGVyUmVmIiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0Iiwib3ZlcmZsb3dZIiwiaGFuZGxlSW5uZXJSZWYiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0EsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCOztJQUVxQkMsYTs7Ozs7Ozs7Ozs7Ozs7Ozs7O29GQVlYO0FBQ05DLE1BQUFBLFVBQVUsRUFBRSxJQUROO0FBRU5DLE1BQUFBLFVBQVUsRUFBRTtBQUZOLEs7OzZGQXNCUyxVQUFBQyxHQUFHLEVBQUk7QUFDdEIsWUFBS0MsUUFBTCxHQUFnQkQsR0FBaEI7QUFDRCxLOzs2RkFFZ0IsVUFBQUEsR0FBRyxFQUFJO0FBQ3RCLFlBQUtFLFFBQUwsR0FBZ0JGLEdBQWhCO0FBQ0QsSzs7Ozs7Ozt3Q0F2Qm1CO0FBQ2xCLFVBQU1GLFVBQVUsR0FBRyxLQUFLSSxRQUFMLENBQWNDLHFCQUFkLEdBQXNDQyxLQUF6RDtBQUNBLFVBQU1MLFVBQVUsR0FBRyxLQUFLRSxRQUFMLENBQWNFLHFCQUFkLEdBQXNDQyxLQUF6RDtBQUNBLFdBQUtDLFFBQUwsQ0FBYztBQUNaUCxRQUFBQSxVQUFVLEVBQVZBLFVBRFk7QUFFWkMsUUFBQUEsVUFBVSxFQUFWQTtBQUZZLE9BQWQ7QUFJRDs7O3dDQUVtQk8sUyxFQUFXQyxTLEVBQVc7QUFDeEMsVUFBSUEsU0FBUyxDQUFDVCxVQUFWLElBQXdCUyxTQUFTLENBQUNSLFVBQXRDLEVBQWtEO0FBQ2hELGFBQUtTLEtBQUwsQ0FBV0MsbUJBQVgsQ0FDRUYsU0FBUyxDQUFDUixVQUFWLEdBQXVCUSxTQUFTLENBQUNULFVBRG5DO0FBR0Q7QUFDRjs7OzZCQVVRO0FBQ1AsYUFDRTtBQUNFLFFBQUEsR0FBRyxFQUFFLEtBQUtZLGNBRFo7QUFFRSwyQkFGRjtBQUdFLFFBQUEsS0FBSyxFQUFFO0FBQ0xDLFVBQUFBLFFBQVEsRUFBRSxPQURMO0FBRUxDLFVBQUFBLEdBQUcsRUFBRSxDQUFDLEdBRkQ7QUFHTEMsVUFBQUEsSUFBSSxFQUFFLENBQUMsR0FIRjtBQUlMVCxVQUFBQSxLQUFLLEVBQUUsR0FKRjtBQUtMVSxVQUFBQSxTQUFTLEVBQUU7QUFMTjtBQUhULFNBV0U7QUFBSyxRQUFBLEdBQUcsRUFBRSxLQUFLQztBQUFmLFFBWEYsQ0FERjtBQWVEOzs7O0VBMUR3Q3BCLGE7O0FBQXRCRSxhOztnQkFBQUEsYSxlQUNBO0FBQ2pCOzs7QUFHQVksRUFBQUEsbUJBQW1CLEVBQUViLFNBQVMsQ0FBQ29CO0FBSmQsQzs7Z0JBREFuQixhLGtCQVFHO0FBQ3BCWSxFQUFBQSxtQkFBbUIsRUFBRSwrQkFBTSxDQUFFO0FBRFQsQzs7U0FSSFosYSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIHJlYWN0L25vLXVudXNlZC1zdGF0ZSAqL1xuaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2Nyb2xsYmFyU2l6ZSBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIHNpemUgb2YgdGhlIHNjcm9sbGJhciBieSBjcmVhdGluZyBhIGhpZGRlbiBmaXhlZCBkaXYuXG4gICAgICovXG4gICAgaGFuZGxlU2Nyb2xsYmFyU2l6ZTogUHJvcFR5cGVzLmZ1bmNcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgaGFuZGxlU2Nyb2xsYmFyU2l6ZTogKCkgPT4ge31cbiAgfVxuXG4gIHN0YXRlID0ge1xuICAgIGlubmVyV2lkdGg6IG51bGwsXG4gICAgb3V0ZXJXaWR0aDogbnVsbFxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgY29uc3QgaW5uZXJXaWR0aCA9IHRoaXMuaW5uZXJSZWYuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGhcbiAgICBjb25zdCBvdXRlcldpZHRoID0gdGhpcy5vdXRlclJlZi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aFxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgaW5uZXJXaWR0aCxcbiAgICAgIG91dGVyV2lkdGhcbiAgICB9KVxuICB9XG5cbiAgY29tcG9uZW50V2lsbFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGlmIChuZXh0U3RhdGUuaW5uZXJXaWR0aCAmJiBuZXh0U3RhdGUub3V0ZXJXaWR0aCkge1xuICAgICAgdGhpcy5wcm9wcy5oYW5kbGVTY3JvbGxiYXJTaXplKFxuICAgICAgICBuZXh0U3RhdGUub3V0ZXJXaWR0aCAtIG5leHRTdGF0ZS5pbm5lcldpZHRoXG4gICAgICApXG4gICAgfVxuICB9XG5cbiAgaGFuZGxlT3V0ZXJSZWYgPSByZWYgPT4ge1xuICAgIHRoaXMub3V0ZXJSZWYgPSByZWZcbiAgfVxuXG4gIGhhbmRsZUlubmVyUmVmID0gcmVmID0+IHtcbiAgICB0aGlzLmlubmVyUmVmID0gcmVmXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXt0aGlzLmhhbmRsZU91dGVyUmVmfVxuICAgICAgICBhcmlhLWhpZGRlblxuICAgICAgICBzdHlsZT17e1xuICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgIHRvcDogLTUwMCxcbiAgICAgICAgICBsZWZ0OiAtNTAwLFxuICAgICAgICAgIHdpZHRoOiAxMDAsXG4gICAgICAgICAgb3ZlcmZsb3dZOiAnc2Nyb2xsJ1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8ZGl2IHJlZj17dGhpcy5oYW5kbGVJbm5lclJlZn0gLz5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuIl19