import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { PureComponent } from 'react';
import cx from 'classnames';
import PropTypes from 'prop-types';
import { Strong } from '../../typography';
import { withTheme } from '../../theme';

var Badge =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Badge, _PureComponent);

  function Badge() {
    _classCallCheck(this, Badge);

    return _possibleConstructorReturn(this, _getPrototypeOf(Badge).apply(this, arguments));
  }

  _createClass(Badge, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          className = _this$props.className,
          propsColor = _this$props.color,
          isInteractive = _this$props.isInteractive,
          isSolid = _this$props.isSolid,
          props = _objectWithoutProperties(_this$props, ["theme", "className", "color", "isInteractive", "isSolid"]);

      var _theme$getBadgeProps = theme.getBadgeProps({
        color: propsColor,
        isSolid: isSolid
      }),
          color = _theme$getBadgeProps.color,
          backgroundColor = _theme$getBadgeProps.backgroundColor;

      var appearance = isInteractive ? 'interactive' : 'default';
      var classNames = cx(className, theme.getBadgeClassName(appearance));
      return React.createElement(Strong, _extends({
        size: 300
      }, Badge.styles, {
        color: color,
        backgroundColor: backgroundColor
      }, props, {
        className: classNames
      }));
    }
  }]);

  return Badge;
}(PureComponent);

Badge.displayName = "Badge";

_defineProperty(Badge, "propTypes", _objectSpread({}, Strong.propTypes, {
  /**
   * The color used for the badge.
   * When the value is `automatic`, use the hash function to determine the color.
   */
  color: PropTypes.string.isRequired,

  /**
   * Whether or not to apply hover/focus/active styles
   */
  isInteractive: PropTypes.bool,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: PropTypes.object.isRequired
}));

_defineProperty(Badge, "defaultProps", {
  color: 'neutral',
  isInteractive: false,
  isSolid: false
});

_defineProperty(Badge, "styles", {
  display: 'inline-block',
  boxSizing: 'border-box',
  height: 16,
  paddingTop: 0,
  paddingRight: 6,
  paddingBottom: 0,
  paddingLeft: 6,
  borderRadius: 2,
  textAlign: 'center',
  textDecoration: 'none',
  textTransform: 'uppercase'
});

export default withTheme(Badge);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9iYWRnZXMvc3JjL0JhZGdlLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsImN4IiwiUHJvcFR5cGVzIiwiU3Ryb25nIiwid2l0aFRoZW1lIiwiQmFkZ2UiLCJwcm9wcyIsInRoZW1lIiwiY2xhc3NOYW1lIiwicHJvcHNDb2xvciIsImNvbG9yIiwiaXNJbnRlcmFjdGl2ZSIsImlzU29saWQiLCJnZXRCYWRnZVByb3BzIiwiYmFja2dyb3VuZENvbG9yIiwiYXBwZWFyYW5jZSIsImNsYXNzTmFtZXMiLCJnZXRCYWRnZUNsYXNzTmFtZSIsInN0eWxlcyIsInByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJib29sIiwib2JqZWN0IiwiZGlzcGxheSIsImJveFNpemluZyIsImhlaWdodCIsInBhZGRpbmdUb3AiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nQm90dG9tIiwicGFkZGluZ0xlZnQiLCJib3JkZXJSYWRpdXMiLCJ0ZXh0QWxpZ24iLCJ0ZXh0RGVjb3JhdGlvbiIsInRleHRUcmFuc2Zvcm0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsRUFBUCxNQUFlLFlBQWY7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsTUFBVCxRQUF1QixrQkFBdkI7QUFDQSxTQUFTQyxTQUFULFFBQTBCLGFBQTFCOztJQUVNQyxLOzs7Ozs7Ozs7Ozs7OzZCQXlDSztBQUFBLHdCQVFILEtBQUtDLEtBUkY7QUFBQSxVQUVMQyxLQUZLLGVBRUxBLEtBRks7QUFBQSxVQUdMQyxTQUhLLGVBR0xBLFNBSEs7QUFBQSxVQUlFQyxVQUpGLGVBSUxDLEtBSks7QUFBQSxVQUtMQyxhQUxLLGVBS0xBLGFBTEs7QUFBQSxVQU1MQyxPQU5LLGVBTUxBLE9BTks7QUFBQSxVQU9GTixLQVBFOztBQUFBLGlDQVU0QkMsS0FBSyxDQUFDTSxhQUFOLENBQW9CO0FBQ3JESCxRQUFBQSxLQUFLLEVBQUVELFVBRDhDO0FBRXJERyxRQUFBQSxPQUFPLEVBQVBBO0FBRnFELE9BQXBCLENBVjVCO0FBQUEsVUFVQ0YsS0FWRCx3QkFVQ0EsS0FWRDtBQUFBLFVBVVFJLGVBVlIsd0JBVVFBLGVBVlI7O0FBZVAsVUFBTUMsVUFBVSxHQUFHSixhQUFhLEdBQUcsYUFBSCxHQUFtQixTQUFuRDtBQUNBLFVBQU1LLFVBQVUsR0FBR2YsRUFBRSxDQUFDTyxTQUFELEVBQVlELEtBQUssQ0FBQ1UsaUJBQU4sQ0FBd0JGLFVBQXhCLENBQVosQ0FBckI7QUFFQSxhQUNFLG9CQUFDLE1BQUQ7QUFDRSxRQUFBLElBQUksRUFBRTtBQURSLFNBRU1WLEtBQUssQ0FBQ2EsTUFGWjtBQUdFLFFBQUEsS0FBSyxFQUFFUixLQUhUO0FBSUUsUUFBQSxlQUFlLEVBQUVJO0FBSm5CLFNBS01SLEtBTE47QUFNRSxRQUFBLFNBQVMsRUFBRVU7QUFOYixTQURGO0FBVUQ7Ozs7RUFyRWlCaEIsYTs7QUFBZEssSzs7Z0JBQUFBLEssaUNBRUNGLE1BQU0sQ0FBQ2dCLFM7QUFFVjs7OztBQUlBVCxFQUFBQSxLQUFLLEVBQUVSLFNBQVMsQ0FBQ2tCLE1BQVYsQ0FBaUJDLFU7O0FBRXhCOzs7QUFHQVYsRUFBQUEsYUFBYSxFQUFFVCxTQUFTLENBQUNvQixJOztBQUV6Qjs7O0FBR0FmLEVBQUFBLEtBQUssRUFBRUwsU0FBUyxDQUFDcUIsTUFBVixDQUFpQkY7OztnQkFsQnRCaEIsSyxrQkFxQmtCO0FBQ3BCSyxFQUFBQSxLQUFLLEVBQUUsU0FEYTtBQUVwQkMsRUFBQUEsYUFBYSxFQUFFLEtBRks7QUFHcEJDLEVBQUFBLE9BQU8sRUFBRTtBQUhXLEM7O2dCQXJCbEJQLEssWUEyQlk7QUFDZG1CLEVBQUFBLE9BQU8sRUFBRSxjQURLO0FBRWRDLEVBQUFBLFNBQVMsRUFBRSxZQUZHO0FBR2RDLEVBQUFBLE1BQU0sRUFBRSxFQUhNO0FBSWRDLEVBQUFBLFVBQVUsRUFBRSxDQUpFO0FBS2RDLEVBQUFBLFlBQVksRUFBRSxDQUxBO0FBTWRDLEVBQUFBLGFBQWEsRUFBRSxDQU5EO0FBT2RDLEVBQUFBLFdBQVcsRUFBRSxDQVBDO0FBUWRDLEVBQUFBLFlBQVksRUFBRSxDQVJBO0FBU2RDLEVBQUFBLFNBQVMsRUFBRSxRQVRHO0FBVWRDLEVBQUFBLGNBQWMsRUFBRSxNQVZGO0FBV2RDLEVBQUFBLGFBQWEsRUFBRTtBQVhELEM7O0FBNkNsQixlQUFlOUIsU0FBUyxDQUFDQyxLQUFELENBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgU3Ryb25nIH0gZnJvbSAnLi4vLi4vdHlwb2dyYXBoeSdcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uLy4uL3RoZW1lJ1xuXG5jbGFzcyBCYWRnZSBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC4uLlN0cm9uZy5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgY29sb3IgdXNlZCBmb3IgdGhlIGJhZGdlLlxuICAgICAqIFdoZW4gdGhlIHZhbHVlIGlzIGBhdXRvbWF0aWNgLCB1c2UgdGhlIGhhc2ggZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIHRoZSBjb2xvci5cbiAgICAgKi9cbiAgICBjb2xvcjogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogV2hldGhlciBvciBub3QgdG8gYXBwbHkgaG92ZXIvZm9jdXMvYWN0aXZlIHN0eWxlc1xuICAgICAqL1xuICAgIGlzSW50ZXJhY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogVGhlbWUgcHJvdmlkZWQgYnkgVGhlbWVQcm92aWRlci5cbiAgICAgKi9cbiAgICB0aGVtZTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGNvbG9yOiAnbmV1dHJhbCcsXG4gICAgaXNJbnRlcmFjdGl2ZTogZmFsc2UsXG4gICAgaXNTb2xpZDogZmFsc2VcbiAgfVxuXG4gIHN0YXRpYyBzdHlsZXMgPSB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgYm94U2l6aW5nOiAnYm9yZGVyLWJveCcsXG4gICAgaGVpZ2h0OiAxNixcbiAgICBwYWRkaW5nVG9wOiAwLFxuICAgIHBhZGRpbmdSaWdodDogNixcbiAgICBwYWRkaW5nQm90dG9tOiAwLFxuICAgIHBhZGRpbmdMZWZ0OiA2LFxuICAgIGJvcmRlclJhZGl1czogMixcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgdGV4dFRyYW5zZm9ybTogJ3VwcGVyY2FzZSdcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICB0aGVtZSxcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGNvbG9yOiBwcm9wc0NvbG9yLFxuICAgICAgaXNJbnRlcmFjdGl2ZSxcbiAgICAgIGlzU29saWQsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBjb25zdCB7IGNvbG9yLCBiYWNrZ3JvdW5kQ29sb3IgfSA9IHRoZW1lLmdldEJhZGdlUHJvcHMoe1xuICAgICAgY29sb3I6IHByb3BzQ29sb3IsXG4gICAgICBpc1NvbGlkXG4gICAgfSlcblxuICAgIGNvbnN0IGFwcGVhcmFuY2UgPSBpc0ludGVyYWN0aXZlID8gJ2ludGVyYWN0aXZlJyA6ICdkZWZhdWx0J1xuICAgIGNvbnN0IGNsYXNzTmFtZXMgPSBjeChjbGFzc05hbWUsIHRoZW1lLmdldEJhZGdlQ2xhc3NOYW1lKGFwcGVhcmFuY2UpKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxTdHJvbmdcbiAgICAgICAgc2l6ZT17MzAwfVxuICAgICAgICB7Li4uQmFkZ2Uuc3R5bGVzfVxuICAgICAgICBjb2xvcj17Y29sb3J9XG4gICAgICAgIGJhY2tncm91bmRDb2xvcj17YmFja2dyb3VuZENvbG9yfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShCYWRnZSlcbiJdfQ==