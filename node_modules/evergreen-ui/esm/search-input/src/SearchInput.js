import _objectSpread from "@babel/runtime/helpers/esm/objectSpread";
import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import React, { PureComponent } from 'react';
import Box, { splitBoxProps } from 'ui-box';
import { Icon } from '../../icon';
import { TextInput } from '../../text-input';
import { withTheme } from '../../theme';
import { StackingOrder } from '../../constants';

var SearchInput =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(SearchInput, _PureComponent);

  function SearchInput() {
    _classCallCheck(this, SearchInput);

    return _possibleConstructorReturn(this, _getPrototypeOf(SearchInput).apply(this, arguments));
  }

  _createClass(SearchInput, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          theme = _this$props.theme,
          appearance = _this$props.appearance,
          disabled = _this$props.disabled,
          height = _this$props.height,
          props = _objectWithoutProperties(_this$props, ["theme", "appearance", "disabled", "height"]);

      var _splitBoxProps = splitBoxProps(props),
          matchedProps = _splitBoxProps.matchedProps,
          remainingProps = _splitBoxProps.remainingProps;

      var width = matchedProps.width;
      var iconSize = theme.getIconSizeForInput(height);
      return React.createElement(Box, _extends({
        position: "relative",
        display: "inline-flex",
        height: height
      }, matchedProps), React.createElement(Box, {
        height: height,
        width: height,
        pointerEvents: "none",
        position: "absolute",
        display: "flex",
        justifyContent: "center",
        alignItems: "center"
      }, React.createElement(Icon, {
        icon: "search",
        color: "default",
        zIndex: StackingOrder.FOCUSED + 1,
        size: iconSize
      })), React.createElement(TextInput, _extends({
        height: height,
        paddingLeft: height,
        appearance: appearance,
        disabled: disabled,
        width: width
      }, remainingProps)));
    }
  }]);

  return SearchInput;
}(PureComponent);

SearchInput.displayName = "SearchInput";

_defineProperty(SearchInput, "propTypes", _objectSpread({}, TextInput.propTypes));

_defineProperty(SearchInput, "defaultProps", {
  height: 32,
  appearance: 'default'
});

export default withTheme(SearchInput);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWFyY2gtaW5wdXQvc3JjL1NlYXJjaElucHV0LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIkJveCIsInNwbGl0Qm94UHJvcHMiLCJJY29uIiwiVGV4dElucHV0Iiwid2l0aFRoZW1lIiwiU3RhY2tpbmdPcmRlciIsIlNlYXJjaElucHV0IiwicHJvcHMiLCJ0aGVtZSIsImFwcGVhcmFuY2UiLCJkaXNhYmxlZCIsImhlaWdodCIsIm1hdGNoZWRQcm9wcyIsInJlbWFpbmluZ1Byb3BzIiwid2lkdGgiLCJpY29uU2l6ZSIsImdldEljb25TaXplRm9ySW5wdXQiLCJGT0NVU0VEIiwicHJvcFR5cGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxhQUFoQixRQUFxQyxPQUFyQztBQUNBLE9BQU9DLEdBQVAsSUFBY0MsYUFBZCxRQUFtQyxRQUFuQztBQUNBLFNBQVNDLElBQVQsUUFBcUIsWUFBckI7QUFDQSxTQUFTQyxTQUFULFFBQTBCLGtCQUExQjtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsYUFBMUI7QUFDQSxTQUFTQyxhQUFULFFBQThCLGlCQUE5Qjs7SUFFTUMsVzs7Ozs7Ozs7Ozs7Ozs2QkFhSztBQUFBLHdCQUNtRCxLQUFLQyxLQUR4RDtBQUFBLFVBQ0NDLEtBREQsZUFDQ0EsS0FERDtBQUFBLFVBQ1FDLFVBRFIsZUFDUUEsVUFEUjtBQUFBLFVBQ29CQyxRQURwQixlQUNvQkEsUUFEcEI7QUFBQSxVQUM4QkMsTUFEOUIsZUFDOEJBLE1BRDlCO0FBQUEsVUFDeUNKLEtBRHpDOztBQUFBLDJCQUVrQ04sYUFBYSxDQUFDTSxLQUFELENBRi9DO0FBQUEsVUFFQ0ssWUFGRCxrQkFFQ0EsWUFGRDtBQUFBLFVBRWVDLGNBRmYsa0JBRWVBLGNBRmY7O0FBQUEsVUFHQ0MsS0FIRCxHQUdXRixZQUhYLENBR0NFLEtBSEQ7QUFJUCxVQUFNQyxRQUFRLEdBQUdQLEtBQUssQ0FBQ1EsbUJBQU4sQ0FBMEJMLE1BQTFCLENBQWpCO0FBRUEsYUFDRSxvQkFBQyxHQUFEO0FBQ0UsUUFBQSxRQUFRLEVBQUMsVUFEWDtBQUVFLFFBQUEsT0FBTyxFQUFDLGFBRlY7QUFHRSxRQUFBLE1BQU0sRUFBRUE7QUFIVixTQUlNQyxZQUpOLEdBTUUsb0JBQUMsR0FBRDtBQUNFLFFBQUEsTUFBTSxFQUFFRCxNQURWO0FBRUUsUUFBQSxLQUFLLEVBQUVBLE1BRlQ7QUFHRSxRQUFBLGFBQWEsRUFBQyxNQUhoQjtBQUlFLFFBQUEsUUFBUSxFQUFDLFVBSlg7QUFLRSxRQUFBLE9BQU8sRUFBQyxNQUxWO0FBTUUsUUFBQSxjQUFjLEVBQUMsUUFOakI7QUFPRSxRQUFBLFVBQVUsRUFBQztBQVBiLFNBU0Usb0JBQUMsSUFBRDtBQUNFLFFBQUEsSUFBSSxFQUFDLFFBRFA7QUFFRSxRQUFBLEtBQUssRUFBQyxTQUZSO0FBR0UsUUFBQSxNQUFNLEVBQUVOLGFBQWEsQ0FBQ1ksT0FBZCxHQUF3QixDQUhsQztBQUlFLFFBQUEsSUFBSSxFQUFFRjtBQUpSLFFBVEYsQ0FORixFQXNCRSxvQkFBQyxTQUFEO0FBQ0UsUUFBQSxNQUFNLEVBQUVKLE1BRFY7QUFFRSxRQUFBLFdBQVcsRUFBRUEsTUFGZjtBQUdFLFFBQUEsVUFBVSxFQUFFRixVQUhkO0FBSUUsUUFBQSxRQUFRLEVBQUVDLFFBSlo7QUFLRSxRQUFBLEtBQUssRUFBRUk7QUFMVCxTQU1NRCxjQU5OLEVBdEJGLENBREY7QUFpQ0Q7Ozs7RUFwRHVCZCxhOztBQUFwQk8sVzs7Z0JBQUFBLFcsaUNBS0NILFNBQVMsQ0FBQ2UsUzs7Z0JBTFhaLFcsa0JBUWtCO0FBQ3BCSyxFQUFBQSxNQUFNLEVBQUUsRUFEWTtBQUVwQkYsRUFBQUEsVUFBVSxFQUFFO0FBRlEsQzs7QUErQ3hCLGVBQWVMLFNBQVMsQ0FBQ0UsV0FBRCxDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgQm94LCB7IHNwbGl0Qm94UHJvcHMgfSBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnLi4vLi4vaWNvbidcbmltcG9ydCB7IFRleHRJbnB1dCB9IGZyb20gJy4uLy4uL3RleHQtaW5wdXQnXG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcbmltcG9ydCB7IFN0YWNraW5nT3JkZXIgfSBmcm9tICcuLi8uLi9jb25zdGFudHMnXG5cbmNsYXNzIFNlYXJjaElucHV0IGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIFRleHRJbnB1dCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAgICovXG4gICAgLi4uVGV4dElucHV0LnByb3BUeXBlc1xuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6IDMyLFxuICAgIGFwcGVhcmFuY2U6ICdkZWZhdWx0J1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgdGhlbWUsIGFwcGVhcmFuY2UsIGRpc2FibGVkLCBoZWlnaHQsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgeyBtYXRjaGVkUHJvcHMsIHJlbWFpbmluZ1Byb3BzIH0gPSBzcGxpdEJveFByb3BzKHByb3BzKVxuICAgIGNvbnN0IHsgd2lkdGggfSA9IG1hdGNoZWRQcm9wc1xuICAgIGNvbnN0IGljb25TaXplID0gdGhlbWUuZ2V0SWNvblNpemVGb3JJbnB1dChoZWlnaHQpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEJveFxuICAgICAgICBwb3NpdGlvbj1cInJlbGF0aXZlXCJcbiAgICAgICAgZGlzcGxheT1cImlubGluZS1mbGV4XCJcbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIHsuLi5tYXRjaGVkUHJvcHN9XG4gICAgICA+XG4gICAgICAgIDxCb3hcbiAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgICB3aWR0aD17aGVpZ2h0fVxuICAgICAgICAgIHBvaW50ZXJFdmVudHM9XCJub25lXCJcbiAgICAgICAgICBwb3NpdGlvbj1cImFic29sdXRlXCJcbiAgICAgICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICA+XG4gICAgICAgICAgPEljb25cbiAgICAgICAgICAgIGljb249XCJzZWFyY2hcIlxuICAgICAgICAgICAgY29sb3I9XCJkZWZhdWx0XCJcbiAgICAgICAgICAgIHpJbmRleD17U3RhY2tpbmdPcmRlci5GT0NVU0VEICsgMX1cbiAgICAgICAgICAgIHNpemU9e2ljb25TaXplfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvQm94PlxuICAgICAgICA8VGV4dElucHV0XG4gICAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgICAgcGFkZGluZ0xlZnQ9e2hlaWdodH1cbiAgICAgICAgICBhcHBlYXJhbmNlPXthcHBlYXJhbmNlfVxuICAgICAgICAgIGRpc2FibGVkPXtkaXNhYmxlZH1cbiAgICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgICAgey4uLnJlbWFpbmluZ1Byb3BzfVxuICAgICAgICAvPlxuICAgICAgPC9Cb3g+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShTZWFyY2hJbnB1dClcbiJdfQ==