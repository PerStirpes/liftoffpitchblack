"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _uiBox = _interopRequireDefault(require("ui-box"));

var _theme = require("../../theme");

var StringAndBoolPropType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]);

var Pane =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Pane, _PureComponent);

  function Pane() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Pane);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Pane)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getHoverElevationStyle", function (hoverElevation, css) {
      var theme = _this.props.theme;
      if (!Number.isInteger(hoverElevation)) return {};
      return {
        transitionDuration: '150ms',
        transitionProperty: 'box-shadow, transform',
        transitionTimingFunction: "cubic-bezier(0.0, 0.0, 0.2, 1)",
        ':hover': (0, _objectSpread2.default)({}, css[':hover'] || {}, {
          transform: 'translateY(-2px)',
          boxShadow: theme.getElevation(hoverElevation)
        })
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getActiveElevationStyle", function (activeElevation, css) {
      var theme = _this.props.theme;
      if (!Number.isInteger(activeElevation)) return {};
      return {
        ':active': (0, _objectSpread2.default)({}, css[':active'] || {}, {
          transform: 'translateY(-1px)',
          boxShadow: theme.getElevation(activeElevation)
        })
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "getBorderSideProperty", function (_ref) {
      var borderSideProperty = _ref.borderSideProperty,
          border = _ref.border;
      var theme = _this.props.theme;

      if (Object.prototype.hasOwnProperty.call(theme.colors.border, borderSideProperty)) {
        return "1px solid ".concat(theme.colors.border[borderSideProperty]);
      }

      if (borderSideProperty === true) {
        return "1px solid ".concat(theme.colors.border.default);
      }

      if (borderSideProperty === false) {
        return null;
      }

      if (Object.prototype.hasOwnProperty.call(theme.colors.border, border)) {
        return "1px solid ".concat(theme.colors.border[border]);
      }

      if (border === true) {
        return "1px solid ".concat(theme.colors.border.default);
      }

      return borderSideProperty;
    });
    return _this;
  }

  (0, _createClass2.default)(Pane, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          theme = _this$props.theme,
          background = _this$props.background,
          elevation = _this$props.elevation,
          hoverElevation = _this$props.hoverElevation,
          activeElevation = _this$props.activeElevation,
          border = _this$props.border,
          borderTop = _this$props.borderTop,
          borderRight = _this$props.borderRight,
          borderBottom = _this$props.borderBottom,
          borderLeft = _this$props.borderLeft,
          _this$props$css = _this$props.css,
          css = _this$props$css === void 0 ? {} : _this$props$css,
          props = (0, _objectWithoutProperties2.default)(_this$props, ["theme", "background", "elevation", "hoverElevation", "activeElevation", "border", "borderTop", "borderRight", "borderBottom", "borderLeft", "css"]);
      var elevationStyle = theme.getElevation(elevation);
      var hoverElevationStyle = this.getHoverElevationStyle(hoverElevation, css);
      var activeElevationStyle = this.getActiveElevationStyle(activeElevation, css);

      var _map = [borderTop, borderRight, borderBottom, borderLeft].map(function (borderSideProperty) {
        return _this2.getBorderSideProperty({
          borderSideProperty: borderSideProperty,
          border: border
        });
      }),
          _map2 = (0, _slicedToArray2.default)(_map, 4),
          _borderTop = _map2[0],
          _borderRight = _map2[1],
          _borderBottom = _map2[2],
          _borderLeft = _map2[3];

      return _react.default.createElement(_uiBox.default, (0, _extends2.default)({
        borderTop: _borderTop,
        borderRight: _borderRight,
        borderBottom: _borderBottom,
        borderLeft: _borderLeft,
        boxShadow: elevationStyle,
        background: theme.getBackground(background),
        css: (0, _objectSpread2.default)({}, css, hoverElevationStyle, activeElevationStyle)
      }, props));
    }
  }]);
  return Pane;
}(_react.PureComponent);

Pane.displayName = "Pane";
(0, _defineProperty2.default)(Pane, "propTypes", (0, _objectSpread2.default)({}, _uiBox.default.propTypes, {
  /**
   * Background property.
   * `tint1`, `tint2` etc. from `theme.colors.background` are available.
   */
  background: _propTypes.default.string,

  /**
   * Elevation of the Pane.
   * Values: 0, 1, 2, 3, 4.
   */
  elevation: _propTypes.default.oneOf([0, 1, 2, 3, 4]),

  /**
   * Elevation of the Pane on hover. Might get deprecated.
   * Values: 0, 1, 2, 3, 4.
   */
  hoverElevation: _propTypes.default.oneOf([0, 1, 2, 3, 4]),

  /**
   * Elevation of the Pane on click. Might get deprecated.
   * Values: 0, 1, 2, 3, 4.
   */
  activeElevation: _propTypes.default.oneOf([0, 1, 2, 3, 4]),

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, muted, default.
   */
  border: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderTop: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderRight: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderBottom: StringAndBoolPropType,

  /**
   * Can be a explicit border value or a boolean.
   * Values: true, extraMuted, muted, default.
   */
  borderLeft: StringAndBoolPropType,

  /**
   * Theme provided by ThemeProvider.
   */
  theme: _propTypes.default.object.isRequired
}));

var _default = (0, _theme.withTheme)(Pane);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,