"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _ToastManager = _interopRequireDefault(require("./ToastManager"));

var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';
/**
 * The Toaster manages the interactionsb between
 * the ToasterManger and the toast API.
 */

var Toaster = function Toaster() {
  var _this = this;

  (0, _classCallCheck2.default)(this, Toaster);
  (0, _defineProperty2.default)(this, "_bindNotify", function (handler) {
    _this.notifyHandler = handler;
  });
  (0, _defineProperty2.default)(this, "_bindGetToasts", function (handler) {
    _this.getToastsHandler = handler;
  });
  (0, _defineProperty2.default)(this, "_bindCloseAll", function (handler) {
    _this.closeAllHandler = handler;
  });
  (0, _defineProperty2.default)(this, "getToasts", function () {
    return _this.getToastsHandler();
  });
  (0, _defineProperty2.default)(this, "closeAll", function () {
    return _this.closeAllHandler();
  });
  (0, _defineProperty2.default)(this, "notify", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'none'
    }));
  });
  (0, _defineProperty2.default)(this, "success", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'success'
    }));
  });
  (0, _defineProperty2.default)(this, "warning", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'warning'
    }));
  });
  (0, _defineProperty2.default)(this, "danger", function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return _this.notifyHandler(title, (0, _objectSpread2.default)({}, settings, {
      intent: 'danger'
    }));
  });
  if (!isBrowser) return;
  var container = document.createElement('div');
  container.setAttribute('data-evergreen-toaster-container', '');
  document.body.appendChild(container);

  _reactDom.default.render(_react.default.createElement(_ToastManager.default, {
    bindNotify: this._bindNotify,
    bindGetToasts: this._bindGetToasts,
    bindCloseAll: this._bindCloseAll
  }), container);
};

exports.default = Toaster;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b2FzdGVyL3NyYy9Ub2FzdGVyLmpzIl0sIm5hbWVzIjpbImlzQnJvd3NlciIsIndpbmRvdyIsImRvY3VtZW50IiwiVG9hc3RlciIsImhhbmRsZXIiLCJub3RpZnlIYW5kbGVyIiwiZ2V0VG9hc3RzSGFuZGxlciIsImNsb3NlQWxsSGFuZGxlciIsInRpdGxlIiwic2V0dGluZ3MiLCJpbnRlbnQiLCJjb250YWluZXIiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiYm9keSIsImFwcGVuZENoaWxkIiwiUmVhY3RET00iLCJyZW5kZXIiLCJfYmluZE5vdGlmeSIsIl9iaW5kR2V0VG9hc3RzIiwiX2JpbmRDbG9zZUFsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsU0FBUyxHQUNiLE9BQU9DLE1BQVAsS0FBa0IsV0FBbEIsSUFBaUMsT0FBT0EsTUFBTSxDQUFDQyxRQUFkLEtBQTJCLFdBRDlEO0FBR0E7Ozs7O0lBSXFCQyxPLEdBQ25CLG1CQUFjO0FBQUE7O0FBQUE7QUFBQSxxREFpQkEsVUFBQUMsT0FBTyxFQUFJO0FBQ3ZCLElBQUEsS0FBSSxDQUFDQyxhQUFMLEdBQXFCRCxPQUFyQjtBQUNELEdBbkJhO0FBQUEsd0RBcUJHLFVBQUFBLE9BQU8sRUFBSTtBQUMxQixJQUFBLEtBQUksQ0FBQ0UsZ0JBQUwsR0FBd0JGLE9BQXhCO0FBQ0QsR0F2QmE7QUFBQSx1REF5QkUsVUFBQUEsT0FBTyxFQUFJO0FBQ3pCLElBQUEsS0FBSSxDQUFDRyxlQUFMLEdBQXVCSCxPQUF2QjtBQUNELEdBM0JhO0FBQUEsbURBNkJGLFlBQU07QUFDaEIsV0FBTyxLQUFJLENBQUNFLGdCQUFMLEVBQVA7QUFDRCxHQS9CYTtBQUFBLGtEQWlDSCxZQUFNO0FBQ2YsV0FBTyxLQUFJLENBQUNDLGVBQUwsRUFBUDtBQUNELEdBbkNhO0FBQUEsZ0RBcUNMLFVBQUNDLEtBQUQsRUFBMEI7QUFBQSxRQUFsQkMsUUFBa0IsdUVBQVAsRUFBTztBQUNqQyxXQUFPLEtBQUksQ0FBQ0osYUFBTCxDQUFtQkcsS0FBbkIsa0NBQStCQyxRQUEvQjtBQUF5Q0MsTUFBQUEsTUFBTSxFQUFFO0FBQWpELE9BQVA7QUFDRCxHQXZDYTtBQUFBLGlEQXlDSixVQUFDRixLQUFELEVBQTBCO0FBQUEsUUFBbEJDLFFBQWtCLHVFQUFQLEVBQU87QUFDbEMsV0FBTyxLQUFJLENBQUNKLGFBQUwsQ0FBbUJHLEtBQW5CLGtDQUErQkMsUUFBL0I7QUFBeUNDLE1BQUFBLE1BQU0sRUFBRTtBQUFqRCxPQUFQO0FBQ0QsR0EzQ2E7QUFBQSxpREE2Q0osVUFBQ0YsS0FBRCxFQUEwQjtBQUFBLFFBQWxCQyxRQUFrQix1RUFBUCxFQUFPO0FBQ2xDLFdBQU8sS0FBSSxDQUFDSixhQUFMLENBQW1CRyxLQUFuQixrQ0FBK0JDLFFBQS9CO0FBQXlDQyxNQUFBQSxNQUFNLEVBQUU7QUFBakQsT0FBUDtBQUNELEdBL0NhO0FBQUEsZ0RBaURMLFVBQUNGLEtBQUQsRUFBMEI7QUFBQSxRQUFsQkMsUUFBa0IsdUVBQVAsRUFBTztBQUNqQyxXQUFPLEtBQUksQ0FBQ0osYUFBTCxDQUFtQkcsS0FBbkIsa0NBQStCQyxRQUEvQjtBQUF5Q0MsTUFBQUEsTUFBTSxFQUFFO0FBQWpELE9BQVA7QUFDRCxHQW5EYTtBQUNaLE1BQUksQ0FBQ1YsU0FBTCxFQUFnQjtBQUVoQixNQUFNVyxTQUFTLEdBQUdULFFBQVEsQ0FBQ1UsYUFBVCxDQUF1QixLQUF2QixDQUFsQjtBQUNBRCxFQUFBQSxTQUFTLENBQUNFLFlBQVYsQ0FBdUIsa0NBQXZCLEVBQTJELEVBQTNEO0FBQ0FYLEVBQUFBLFFBQVEsQ0FBQ1ksSUFBVCxDQUFjQyxXQUFkLENBQTBCSixTQUExQjs7QUFFQUssb0JBQVNDLE1BQVQsQ0FDRSw2QkFBQyxxQkFBRDtBQUNFLElBQUEsVUFBVSxFQUFFLEtBQUtDLFdBRG5CO0FBRUUsSUFBQSxhQUFhLEVBQUUsS0FBS0MsY0FGdEI7QUFHRSxJQUFBLFlBQVksRUFBRSxLQUFLQztBQUhyQixJQURGLEVBTUVULFNBTkY7QUFRRCxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCBUb2FzdE1hbmFnZXIgZnJvbSAnLi9Ub2FzdE1hbmFnZXInXG5cbmNvbnN0IGlzQnJvd3NlciA9XG4gIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG5cbi8qKlxuICogVGhlIFRvYXN0ZXIgbWFuYWdlcyB0aGUgaW50ZXJhY3Rpb25zYiBiZXR3ZWVuXG4gKiB0aGUgVG9hc3Rlck1hbmdlciBhbmQgdGhlIHRvYXN0IEFQSS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9hc3RlciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGlmICghaXNCcm93c2VyKSByZXR1cm5cblxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZSgnZGF0YS1ldmVyZ3JlZW4tdG9hc3Rlci1jb250YWluZXInLCAnJylcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcilcblxuICAgIFJlYWN0RE9NLnJlbmRlcihcbiAgICAgIDxUb2FzdE1hbmFnZXJcbiAgICAgICAgYmluZE5vdGlmeT17dGhpcy5fYmluZE5vdGlmeX1cbiAgICAgICAgYmluZEdldFRvYXN0cz17dGhpcy5fYmluZEdldFRvYXN0c31cbiAgICAgICAgYmluZENsb3NlQWxsPXt0aGlzLl9iaW5kQ2xvc2VBbGx9XG4gICAgICAvPixcbiAgICAgIGNvbnRhaW5lclxuICAgIClcbiAgfVxuXG4gIF9iaW5kTm90aWZ5ID0gaGFuZGxlciA9PiB7XG4gICAgdGhpcy5ub3RpZnlIYW5kbGVyID0gaGFuZGxlclxuICB9XG5cbiAgX2JpbmRHZXRUb2FzdHMgPSBoYW5kbGVyID0+IHtcbiAgICB0aGlzLmdldFRvYXN0c0hhbmRsZXIgPSBoYW5kbGVyXG4gIH1cblxuICBfYmluZENsb3NlQWxsID0gaGFuZGxlciA9PiB7XG4gICAgdGhpcy5jbG9zZUFsbEhhbmRsZXIgPSBoYW5kbGVyXG4gIH1cblxuICBnZXRUb2FzdHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VG9hc3RzSGFuZGxlcigpXG4gIH1cblxuICBjbG9zZUFsbCA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5jbG9zZUFsbEhhbmRsZXIoKVxuICB9XG5cbiAgbm90aWZ5ID0gKHRpdGxlLCBzZXR0aW5ncyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMubm90aWZ5SGFuZGxlcih0aXRsZSwgeyAuLi5zZXR0aW5ncywgaW50ZW50OiAnbm9uZScgfSlcbiAgfVxuXG4gIHN1Y2Nlc3MgPSAodGl0bGUsIHNldHRpbmdzID0ge30pID0+IHtcbiAgICByZXR1cm4gdGhpcy5ub3RpZnlIYW5kbGVyKHRpdGxlLCB7IC4uLnNldHRpbmdzLCBpbnRlbnQ6ICdzdWNjZXNzJyB9KVxuICB9XG5cbiAgd2FybmluZyA9ICh0aXRsZSwgc2V0dGluZ3MgPSB7fSkgPT4ge1xuICAgIHJldHVybiB0aGlzLm5vdGlmeUhhbmRsZXIodGl0bGUsIHsgLi4uc2V0dGluZ3MsIGludGVudDogJ3dhcm5pbmcnIH0pXG4gIH1cblxuICBkYW5nZXIgPSAodGl0bGUsIHNldHRpbmdzID0ge30pID0+IHtcbiAgICByZXR1cm4gdGhpcy5ub3RpZnlIYW5kbGVyKHRpdGxlLCB7IC4uLnNldHRpbmdzLCBpbnRlbnQ6ICdkYW5nZXInIH0pXG4gIH1cbn1cbiJdfQ==